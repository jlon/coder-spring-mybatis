<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.0.xsd">
    
	 <!--mysql 数据源  -->
	<bean id="mysql_dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
		<value>${mysql.driverClass}</value>
		</property>
		<property name="jdbcUrl">
		<value>${mysql.url}</value>
		</property>
		<property name="user">
			<value>${mysql.user}</value>
		</property>
		<property name="password">
			<value>${mysql.password}</value>
		</property>
		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize" value="10" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="100" />
		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="1800" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="30" />
		 <!-- #每100ms尝试一次 -->
		<property name="acquireRetryDelay" value="100" />
		<property name="maxStatements" value="1000" />
		<property name="initialPoolSize" value="10" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
		<property name="breakAfterAcquireFailure" value="false" />
		<property name="testConnectionOnCheckout" value="false" />
	</bean>

	<!-- 创建SqlSessionFactory，同时指定数据源-->
	<bean  name="sqlSessionFactory_mysql" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mysql_dataSource" />
		<!--总配置文件  -->
		<property name="configLocation"
			value="classpath:mybatis/mybatis_config.xml" />
		<!-- mapper xml的位置 -->
		<property name="mapperLocations" value="classpath*:mybatis/mysql/*Mapper.xml"/>
	</bean>

	<!-- 扫描 basePackage下所有的接口，根据对应的mapper.xml为其生成代理类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	    <property name="annotationClass" value="org.springframework.stereotype.Repository"/>  
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_mysql" />
		<property name="basePackage" value="com.ailink.system" />
	</bean>

	<!-- 事务-->
	<bean name="mysql_transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mysql_dataSource"></property>
	</bean>

	<tx:advice id="mysql_txAdvice" transaction-manager="mysql_transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="pc"
			expression="execution(* com.ailink.syatem.*.service.*Service.*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="mysql_txAdvice" />
	</aop:config>

</beans>